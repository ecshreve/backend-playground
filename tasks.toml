###
# go tasks
###
[[task]]
  id = "build"
  type = "short"
  cmd = """
  go build -o bin/gqlserver ./cmd/gqlserver
  """

[[task]]
    id = "test"
    type = "short"
    cmd = "go test ./..."

###
# code generation tasks
###
[[task]]
  id = "entgen"
  description = "Generate ent schema"
  type = "short"
  watch = ["ent/schema/*.go", "ent/entc.go"]
  cmd = """
    echo "Running ent generation with entc..."
    go run -mod=mod ent/entc.go
  """

[[task]]
  id = "gqlgen"
  description = "Generate graphql"
  type = "short"
  watch = ["gqlgen.yml", "gqlserver/*.graphql"]
  dependencies = ["entgen"]
  cmd = """
    echo "Running gqlgen generation with gqlgen..."
    go run -mod=mod github.com/99designs/gqlgen
  """

###
# server tasks
###
[[task]]
  id = "gqlserver"
  description = "Run graphql server"
  type = "long"
  triggers = ["gqlgen"]
  watch = ["cmd/gqlserver/*.go"]
  cmd = "go run ./cmd/gqlserver"

###
# docker tasks
###
[[task]]
  id = "dbup"
  description = "Start database containers with docker compose"
  type = "short"
  cmd = "docker compose up -d"

[[task]]
  id = "dbdown"
  description = "Stop database containers with docker compose"
  type = "short"
  cmd = "docker compose down"

[[task]]
  id = "dblogs"
  description = "Tail logs from database containers"
  type = "long"
  dependencies = ["dbup"]
  cmd = "docker compose logs -f -n 20"

###
# dev server
###
[[task]]
  id = "dev"
  type = "long"
  dependencies = ["dblogs", "gqlserver"]
  cmd = """
  echo 'Running dev server...'
  while true; do sleep 1; done
  """

######
[[task]]
  id = "entvizfix"
  description = "Fix entviz html"
  type = "short"
  triggers = ["entgen"]
  cmd = """
    echo "Fixing entviz html..."
    sed -i 's/widthConstraint: 60/widthConstraint: 120/g' ent/schema-viz.html
    sed -i 's/heightConstraint: 60/heightConstraint: 40/g' ent/schema-viz.html
    sed -i '/hierarchical: {/,/levelSeparation: 250,/ { 
  s/enabled: true,/enabled: false,/
}' ent/schema-viz.html
  """